name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, ubuntu-latest]
        include:
          - os: windows-2022
          - os: ubuntu-latest
            container: registry.gitlab.steamos.cloud/steamrt/sniper/sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: LuaUnlocker
         

      - name: Checkout Metamod
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/metamod-source
          ref: master
          path: mmsource-2.0
          submodules: recursive

      - name: Checkout HL2SDK
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/hl2sdk
          ref: cs2
          path: hl2sdk-cs2

       Add the patch step here
      - name: Patch HL2SDK (va_list fix)
        run: |
          sed -i 's/m_ReuseList = List;/va_copy(m_ReuseList, List);/g' hl2sdk-cs2/public/tier0/platform.h

      #- name: Verify HL2SDK Structure
      #  run: |
      #    if [ -d "hl2sdk-cs2/public" ]; then
      #      echo "HL2SDK public directory exists."
       #   else
      #      echo "HL2SDK public directory missing. Creating it..."
      #      mkdir -p hl2sdk-cs2/public
       #   fi

     # - name: Verify Protobuf Directory
     #   run: |
     #     cd LuaUnlocker
     #     if [ -d "protobuf/generated" ]; then
     #       echo "Protobuf generated directory found."
    #      else
     #       echo "Protobuf generated directory missing!"
     #       exit 1
     #     fi

      - name: Copy Protobuf Headers to SDK
        run: |
          # Copy generated .pb.h files into the SDK's public directory
          cp LuaUnlocker/protobuf/generated/*.pb.h hl2sdk-cs2/public/
          
      - name: Checkout AMBuild
        uses: actions/checkout@v4
        with:
          repository: alliedmodders/ambuild
          path: ambuild

      - name: Install AMBuild
        run: |
          cd ambuild && python setup.py install && cd ..

      - name: Install Clang 16
        if: matrix.os == 'ubuntu-latest'
        run: |
          apt update && apt install -y clang-16
          ln -sf /usr/bin/clang-16 /usr/bin/clang && ln -sf /usr/bin/clang++-16 /usr/bin/clang++
          
      - name: Build
        working-directory: LuaUnlocker
        shell: bash
        run: |
          mkdir build && cd build
          python ../configure.py --enable-optimize --symbol-files --sdks cs2
          ambuild

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}
          path: LuaUnlocker/build/package

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Package
        run: |
          version=`echo $GITHUB_REF | sed "s/refs\/tags\///"`
          ls -Rall
          if [ -d "./Linux/" ]; then
            cd ./Linux/
            tar -czf ../${{ github.event.repository.name }}-${version}-linux.tar.gz addons
            cd -
          fi
          if [ -d "./Windows/" ]; then
            cd ./Windows/
            zip -r ../${{ github.event.repository.name }}-${version}-windows.zip addons
            cd -
          fi

      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.event.repository.name }}-*
          tag: ${{ github.ref }}
          file_glob: true
